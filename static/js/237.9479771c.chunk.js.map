{"version":3,"file":"static/js/237.9479771c.chunk.js","mappings":"uVAwEA,EApDwB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACnBC,GAAWC,EAAAA,EAAAA,MAETC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,UAAWC,EAAwBL,EAAxBK,MAAOC,EAAiBN,EAAjBM,SAAUC,EAAOP,EAAPO,GAE3C,OACE,UAACC,EAAA,GAAD,CACEC,iBACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,IAAK,EAAzB,WACE,SAACC,EAAA,EAAD,CACEC,QAAS,kBACPb,GAASc,EAAAA,EAAAA,KAAiB,kBAAKf,GAAN,IAAeM,SAAU,KAD3C,EAGTU,KAAK,MACL,aAAW,MACXC,MAAM,UANR,UAQE,SAACC,EAAA,EAAD,OAEF,SAACL,EAAA,EAAD,CACEC,QAAS,kBAAMb,GAASkB,EAAAA,EAAAA,IAAyBZ,GAAxC,EACTS,KAAK,MACL,aAAW,SACXC,MAAM,UACNG,SAA+B,IAArBpB,EAAQM,SALpB,UAOE,SAACe,EAAA,EAAD,OAEF,SAACR,EAAA,EAAD,CACEC,QAAS,kBAAMb,GAASqB,EAAAA,EAAAA,IAAsBf,GAArC,EACTS,KAAK,MACL,aAAW,SACXC,MAAM,QAJR,UAME,SAACM,EAAA,EAAD,SA5BR,WAiCE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,gBAAKC,IAAKtB,EAAWuB,IAAKxB,SAG9B,SAACyB,EAAA,EAAD,CACEC,QAAS1B,EACT2B,UAAS,iBAAYzB,EAAZ,sBAA+BC,OAI/C,ECrBD,EA1CiB,WACf,IAAMyB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBhC,GAAWC,EAAAA,EAAAA,MAEXgC,EAAQH,EAASI,QAAO,SAACC,EAAKC,GAClC,OAAOD,EAAMC,EAAKhC,MAAQgC,EAAK/B,QAChC,GAAE,GAEH,OACE,SAACgC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAAC7B,EAAA,EAAD,CAAK8B,OAAO,OAAOC,MAAO,IAAKC,WAAY,EAA3C,WACE,UAAChC,EAAA,EAAD,CACEC,QAAQ,OACRgC,WAAW,SACXC,eAAe,gBACfH,MAAM,OAJR,WAME,UAACI,EAAA,EAAD,qBAAoBX,MACpB,SAACY,EAAA,EAAD,CACEhC,QAAS,kBAAMb,GAAS8C,EAAAA,EAAAA,MAAf,EACTC,QAAQ,WACR/B,MAAM,UAHR,2BAQDc,EAASkB,OAAS,GACjB,SAACC,EAAA,EAAD,iBACGnB,QADH,IACGA,OADH,EACGA,EAAUoB,KAAI,SAAAnD,GAAO,OACpB,SAAC,EAAD,CAAkCA,QAASA,GAArBA,EAAQO,GADV,OAKxB,SAACsC,EAAA,EAAD,CAAYG,QAAQ,KAAKI,UAAU,SAASV,WAAY,EAAxD,+BAOT,C","sources":["components/product-cast-item/ProductCastItem.jsx","pages/CartPage.jsx"],"sourcesContent":["import React from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\n\nimport {\n  addProductToCast,\n  decrementQuantityProduct,\n  deleteProductFromCast,\n} from 'redux/cast-slice/cast-slice';\nimport { useDispatch } from 'react-redux';\n\nconst ProductCastItem = ({ product }) => {\n  const dispatch = useDispatch();\n\n  const { title, thumbnail, price, quantity, id } = product;\n\n  return (\n    <ListItem\n      secondaryAction={\n        <Box display=\"flex\" gap={4}>\n          <IconButton\n            onClick={() =>\n              dispatch(addProductToCast({ ...product, quantity: 1 }))\n            }\n            edge=\"end\"\n            aria-label=\"add\"\n            color=\"primary\"\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => dispatch(decrementQuantityProduct(id))}\n            edge=\"end\"\n            aria-label=\"remove\"\n            color=\"primary\"\n            disabled={product.quantity === 1}\n          >\n            <RemoveIcon />\n          </IconButton>\n          <IconButton\n            onClick={() => dispatch(deleteProductFromCast(id))}\n            edge=\"end\"\n            aria-label=\"delete\"\n            color=\"error\"\n          >\n            <DeleteIcon />\n          </IconButton>\n        </Box>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <img src={thumbnail} alt={title} />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={title}\n        secondary={`Price: ${price} Quantity: ${quantity}`}\n      />\n    </ListItem>\n  );\n};\n\nexport default ProductCastItem;\n","import { Box, Button, Container, List, Typography } from '@mui/material';\nimport ProductCastItem from 'components/product-cast-item/ProductCastItem';\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { castSelector, clearCast } from 'redux/cast-slice/cast-slice';\n\nconst CartPage = () => {\n  const products = useSelector(castSelector);\n  const dispatch = useDispatch();\n\n  const total = products.reduce((acc, item) => {\n    return acc + item.price * item.quantity;\n  }, 0);\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box margin=\"auto\" width={500} paddingTop={4}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n          width=\"100%\"\n        >\n          <Typography>Total: {total}</Typography>\n          <Button\n            onClick={() => dispatch(clearCast())}\n            variant=\"outlined\"\n            color=\"warning\"\n          >\n            clear cast\n          </Button>\n        </Box>\n        {products.length > 0 ? (\n          <List>\n            {products?.map(product => (\n              <ProductCastItem key={product.id} product={product} />\n            ))}\n          </List>\n        ) : (\n          <Typography variant=\"h5\" textAlign=\"center\" paddingTop={6}>\n            Cast is empty\n          </Typography>\n        )}\n      </Box>\n    </Container>\n  );\n};\n\nexport default CartPage;\n"],"names":["product","dispatch","useDispatch","title","thumbnail","price","quantity","id","ListItem","secondaryAction","Box","display","gap","IconButton","onClick","addProductToCast","edge","color","Add","decrementQuantityProduct","disabled","Remove","deleteProductFromCast","Delete","ListItemAvatar","Avatar","src","alt","ListItemText","primary","secondary","products","useSelector","castSelector","total","reduce","acc","item","Container","maxWidth","margin","width","paddingTop","alignItems","justifyContent","Typography","Button","clearCast","variant","length","List","map","textAlign"],"sourceRoot":""}