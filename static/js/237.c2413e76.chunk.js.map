{"version":3,"file":"static/js/237.c2413e76.chunk.js","mappings":"uVAuEA,EAnDwB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACnBC,GAAWC,EAAAA,EAAAA,MAETC,EAA0CH,EAA1CG,MAAOC,EAAmCJ,EAAnCI,UAAWC,EAAwBL,EAAxBK,MAAOC,EAAiBN,EAAjBM,SAAUC,EAAOP,EAAPO,GAE3C,OACE,UAACC,EAAA,GAAD,CACEC,iBACE,UAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,IAAK,EAAzB,WACE,SAACC,EAAA,EAAD,CACEC,QAAS,kBACPb,GAASc,EAAAA,EAAAA,KAAiB,kBAAKf,GAAN,IAAeM,SAAU,KAD3C,EAGTU,KAAK,MACL,aAAW,MACXC,MAAM,UANR,UAQE,SAACC,EAAA,EAAD,OAEF,SAACL,EAAA,EAAD,CACEC,QAAS,kBAAMb,GAASkB,EAAAA,EAAAA,IAAyBZ,GAAxC,EACTS,KAAK,MACL,aAAW,SACXC,MAAM,UAJR,UAME,SAACG,EAAA,EAAD,OAEF,SAACP,EAAA,EAAD,CACEC,QAAS,kBAAMb,GAASoB,EAAAA,EAAAA,IAAsBd,GAArC,EACTS,KAAK,MACL,aAAW,SACXC,MAAM,QAJR,UAME,SAACK,EAAA,EAAD,SA3BR,WAgCE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,gBAAKC,IAAKrB,EAAWsB,IAAKvB,SAG9B,SAACwB,EAAA,EAAD,CACEC,QAASzB,EACT0B,UAAS,iBAAYxB,EAAZ,sBAA+BC,OAI/C,ECpBD,EA1CiB,WACf,IAAMwB,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvB/B,GAAWC,EAAAA,EAAAA,MAEX+B,EAAQH,EAASI,QAAO,SAACC,EAAKC,GAClC,OAAOD,EAAMC,EAAK/B,MAAQ+B,EAAK9B,QAChC,GAAE,GAEH,OACE,SAAC+B,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,UAAC5B,EAAA,EAAD,CAAK6B,OAAO,OAAOC,MAAO,IAAKC,WAAY,EAA3C,WACE,UAAC/B,EAAA,EAAD,CACEC,QAAQ,OACR+B,WAAW,SACXC,eAAe,gBACfH,MAAM,OAJR,WAME,UAACI,EAAA,EAAD,qBAAoBX,MACpB,SAACY,EAAA,EAAD,CACE/B,QAAS,kBAAMb,GAAS6C,EAAAA,EAAAA,MAAf,EACTC,QAAQ,WACR9B,MAAM,UAHR,2BAQDa,EAASkB,OAAS,GACjB,SAACC,EAAA,EAAD,iBACGnB,QADH,IACGA,OADH,EACGA,EAAUoB,KAAI,SAAAlD,GAAO,OACpB,SAAC,EAAD,CAAkCA,QAASA,GAArBA,EAAQO,GADV,OAKxB,SAACqC,EAAA,EAAD,CAAYG,QAAQ,KAAKI,UAAU,SAASV,WAAY,EAAxD,+BAOT,C","sources":["components/product-cast-item/ProductCastItem.jsx","pages/CartPage.jsx"],"sourcesContent":["import React from 'react';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  IconButton,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n} from '@mui/material';\r\n\r\nimport {\r\n  addProductToCast,\r\n  decrementQuantityProduct,\r\n  deleteProductFromCast,\r\n} from 'redux/cast-slice/cast-slice';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst ProductCastItem = ({ product }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { title, thumbnail, price, quantity, id } = product;\r\n\r\n  return (\r\n    <ListItem\r\n      secondaryAction={\r\n        <Box display=\"flex\" gap={4}>\r\n          <IconButton\r\n            onClick={() =>\r\n              dispatch(addProductToCast({ ...product, quantity: 1 }))\r\n            }\r\n            edge=\"end\"\r\n            aria-label=\"add\"\r\n            color=\"primary\"\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => dispatch(decrementQuantityProduct(id))}\r\n            edge=\"end\"\r\n            aria-label=\"remove\"\r\n            color=\"primary\"\r\n          >\r\n            <RemoveIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => dispatch(deleteProductFromCast(id))}\r\n            edge=\"end\"\r\n            aria-label=\"delete\"\r\n            color=\"error\"\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Box>\r\n      }\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar>\r\n          <img src={thumbnail} alt={title} />\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={title}\r\n        secondary={`Price: ${price} Quantity: ${quantity}`}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ProductCastItem;\r\n","import { Box, Button, Container, List, Typography } from '@mui/material';\r\nimport ProductCastItem from 'components/product-cast-item/ProductCastItem';\r\n\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { castSelector, clearCast } from 'redux/cast-slice/cast-slice';\r\n\r\nconst CartPage = () => {\r\n  const products = useSelector(castSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const total = products.reduce((acc, item) => {\r\n    return acc + item.price * item.quantity;\r\n  }, 0);\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Box margin=\"auto\" width={500} paddingTop={4}>\r\n        <Box\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n          width=\"100%\"\r\n        >\r\n          <Typography>Total: {total}</Typography>\r\n          <Button\r\n            onClick={() => dispatch(clearCast())}\r\n            variant=\"outlined\"\r\n            color=\"warning\"\r\n          >\r\n            clear cast\r\n          </Button>\r\n        </Box>\r\n        {products.length > 0 ? (\r\n          <List>\r\n            {products?.map(product => (\r\n              <ProductCastItem key={product.id} product={product} />\r\n            ))}\r\n          </List>\r\n        ) : (\r\n          <Typography variant=\"h5\" textAlign=\"center\" paddingTop={6}>\r\n            Cast is empty\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n"],"names":["product","dispatch","useDispatch","title","thumbnail","price","quantity","id","ListItem","secondaryAction","Box","display","gap","IconButton","onClick","addProductToCast","edge","color","Add","decrementQuantityProduct","Remove","deleteProductFromCast","Delete","ListItemAvatar","Avatar","src","alt","ListItemText","primary","secondary","products","useSelector","castSelector","total","reduce","acc","item","Container","maxWidth","margin","width","paddingTop","alignItems","justifyContent","Typography","Button","clearCast","variant","length","List","map","textAlign"],"sourceRoot":""}