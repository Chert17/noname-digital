{"version":3,"file":"static/js/605.2f8862a1.chunk.js","mappings":"gTAAaA,EACX,uJ,wCCoIF,EAlHiB,WAAO,IAAD,EACrB,GAAoDC,EAAAA,EAAAA,KAA5CC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,UAAWC,EAAjC,EAAiCA,eACjC,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,WAAS,GAAjD,eAAOG,EAAP,KAAqBC,EAArB,KAEA,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aALNC,EADF,EACEA,aACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,MAHF,IAIEC,UAAaC,EAJf,EAIeA,OAAQC,EAJvB,EAIuBA,QAYvB,OACE,UAACC,EAAA,EAAD,CACEC,WAAY,EACZC,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXC,eAAe,SALjB,WAOE,SAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,SAASC,aAAc,EAA1D,SACGrB,EAAQ,WAAa,WAExB,UAACY,EAAA,EAAD,CACEU,SAAUhB,GAnBC,SAAC,GAAyB,IAAvBiB,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrBxB,EAAOJ,EAAa2B,EAAOC,GAC1B3B,EAAU0B,EAAOC,GAEtBhB,GACD,IAeKiB,UAAU,OACVX,QAAQ,OACRC,cAAc,SACdC,WAAW,SACXU,SAAU,IANZ,WAQE,SAACC,EAAA,GAAD,kBACMpB,EAAS,QAAS,CACpBqB,SAAU,QACVC,QAAS,CACPC,MAAOpC,EACPqC,QAAS,+BALf,IAQEC,KAAK,QACLC,KAAK,QACLd,QAAQ,WACRe,MAAM,QACNC,MAAOzB,EAAOa,MAAQ,QAAU,UAChCa,WAAS,MAEJ,OAAN1B,QAAM,IAANA,OAAA,EAAAA,EAAQa,SACP,SAACL,EAAA,EAAD,CAAYC,QAAQ,UAAUgB,MAAM,QAAQf,UAAU,SAAtD,UACS,OAANV,QAAM,IAANA,GAAA,UAAAA,EAAQa,aAAR,eAAeQ,UAAW,YAI/B,UAACM,EAAA,EAAD,CAAalB,QAAQ,WAAWmB,GAAI,CAAEC,EAAG,EAAGC,MAAO,QAAnD,WACE,SAACC,EAAA,EAAD,CAAYN,MAAOzB,EAAOc,SAAW,QAAU,UAA/C,uBAGA,SAACkB,EAAA,GAAD,gBACEN,WAAS,GACL7B,EAAS,WAAY,CACvBqB,SAAU,WACVe,UAAW,CACTb,MAAO,EACPC,QAAS,mDANf,IASEE,KAAM/B,EAAe,OAAS,WAC9B0C,cACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,SAACC,EAAA,EAAD,CAAYC,QAAS,kBAAM7C,GAAgB,SAAA8C,GAAI,OAAKA,CAAL,GAA1B,EAArB,SACG/C,GAAe,SAACgD,EAAA,EAAD,KAAoB,SAACC,EAAA,EAAD,QAI1CjB,MAAM,WACNC,MAAOzB,EAAOc,SAAW,QAAU,aAEpCd,EAAOc,WACN,SAACN,EAAA,EAAD,CAAYC,QAAQ,UAAUgB,MAAM,QAAQf,UAAU,SAAtD,SACGV,EAAOc,SAASO,cAKvB,UAACqB,EAAA,EAAD,CAAQJ,QAASlD,EAAjB,WACE,SAACuD,EAAA,EAAD,CAAYC,UAAU,aACtB,SAACpC,EAAA,EAAD,CAAYiB,MAAM,UAAUoB,WAAY,EAAxC,6BAIF,SAACH,EAAA,EAAD,CACEnB,KAAK,SACLd,QAAQ,WACRqC,UAAW7C,EACX2B,GAAI,CAAEC,EAAG,GAJX,wBASF,SAACa,EAAA,EAAD,CAAQJ,QAAS,kBAAM/C,GAAUD,EAAhB,EAAwBsC,GAAI,CAAEmB,cAAe,QAA9D,SACGzD,EAAQ,SAAW,aAI3B,C","sources":["helpers/valid.email.js","pages/AuthPage.jsx"],"sourcesContent":["export const validEmail =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n","import {\n  Box,\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { VisibilityOff, Visibility } from '@mui/icons-material';\nimport GoogleIcon from '@mui/icons-material/Google';\n\nimport { validEmail } from 'helpers/valid.email';\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAuth } from '../firebase';\n\nconst AuthPage = () => {\n  const { registerUser, loginUser, authWithGoogle } = useAuth();\n  const [isReg, setIsReg] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({\n    mode: 'onChange',\n  });\n\n  const onSubmit = ({ email, password }) => {\n    if (isReg) registerUser(email, password);\n    else loginUser(email, password);\n\n    reset();\n  };\n\n  return (\n    <Box\n      paddingTop={6}\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Typography variant=\"h4\" textAlign=\"center\" marginBottom={2}>\n        {isReg ? 'Register' : 'Login'}\n      </Typography>\n      <Box\n        onSubmit={handleSubmit(onSubmit)}\n        component=\"form\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        maxWidth={400}\n      >\n        <TextField\n          {...register('email', {\n            required: 'email',\n            pattern: {\n              value: validEmail,\n              message: 'Please enter valid email',\n            },\n          })}\n          name=\"email\"\n          type=\"email\"\n          variant=\"outlined\"\n          label=\"Email\"\n          color={errors.email ? 'error' : 'primary'}\n          fullWidth\n        />\n        {errors?.email && (\n          <Typography variant=\"caption\" color=\"error\" textAlign=\"center\">\n            {errors?.email?.message || 'Error!'}\n          </Typography>\n        )}\n\n        <FormControl variant=\"outlined\" sx={{ m: 1, width: '100%' }}>\n          <InputLabel color={errors.password ? 'error' : 'primary'}>\n            password\n          </InputLabel>\n          <OutlinedInput\n            fullWidth\n            {...register('password', {\n              required: 'password',\n              minLength: {\n                value: 6,\n                message: 'Password should be minimum 6 characters long',\n              },\n            })}\n            type={showPassword ? 'text' : 'password'}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton onClick={() => setShowPassword(show => !show)}>\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label=\"password\"\n            color={errors.password ? 'error' : 'primary'}\n          />\n          {errors.password && (\n            <Typography variant=\"caption\" color=\"error\" textAlign=\"center\">\n              {errors.password.message}\n            </Typography>\n          )}\n        </FormControl>\n\n        <Button onClick={authWithGoogle}>\n          <GoogleIcon htmlColor=\"#9b9797\" />\n          <Typography color=\"#9b9797\" marginLeft={1}>\n            with google\n          </Typography>\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"outlined\"\n          disabled={!isValid}\n          sx={{ m: 3 }}\n        >\n          Submit\n        </Button>\n      </Box>\n      <Button onClick={() => setIsReg(!isReg)} sx={{ textTransform: 'none' }}>\n        {isReg ? 'SignIn' : 'SignUp'}\n      </Button>\n    </Box>\n  );\n};\n\nexport default AuthPage;\n"],"names":["validEmail","useAuth","registerUser","loginUser","authWithGoogle","useState","isReg","setIsReg","showPassword","setShowPassword","useForm","mode","handleSubmit","register","reset","formState","errors","isValid","Box","paddingTop","display","flexDirection","alignItems","justifyContent","Typography","variant","textAlign","marginBottom","onSubmit","email","password","component","maxWidth","TextField","required","pattern","value","message","name","type","label","color","fullWidth","FormControl","sx","m","width","InputLabel","OutlinedInput","minLength","endAdornment","InputAdornment","position","IconButton","onClick","show","VisibilityOff","Visibility","Button","Google","htmlColor","marginLeft","disabled","textTransform"],"sourceRoot":""}